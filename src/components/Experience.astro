---
import { fetchData } from '../utils/api';

const defaultExperiences = [
  {
    title: "Lorem Ipsum Developer",
    company: "Lorem Ipsum Inc.",
    period: "January 2024 - Present",
    description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
  },
  {
    title: "Junior Lorem Ipsum Developer",
    company: "Lorem Ipsum Inc.",
    period: "July 2022 - January 2024",
    description: "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."
  },
  {
    title: "Freelancer Lorem Ipsum Developer",
    company: "Self-employed",
    period: "August 2019 - June 2022",
    description: "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur."
  }
];

const experiences = await fetchData('experiences', defaultExperiences);
---

<section class="py-20" id="experience">
  <div class="container mx-auto px-4">
    <h2 class="text-4xl font-bold mb-12">Experience</h2>
    <div class="relative space-y-8">
      {experiences.map((exp, index) => (
        <div class="experience-item flex gap-8">
          <div class="w-32 flex-shrink-0 text-sm text-gray-500 dark:text-gray-400">
            {exp.period}
          </div>
          <div class="flex-1">
            <h3 class="text-xl font-semibold">{exp.title}</h3>
            <p class="text-primary font-medium">{exp.company}</p>
            <p class="mt-2 text-gray-700 dark:text-gray-300">{exp.description}</p>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<script>
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';

  gsap.registerPlugin(ScrollTrigger);

  document.addEventListener('DOMContentLoaded', () => {
    const items = document.querySelectorAll('.experience-item');
    
    // Set initial state
    gsap.set(items, {
      opacity: 0,
      y: 50
    });
    
    items.forEach((item, index) => {
      gsap.to(item, {
        scrollTrigger: {
          trigger: item,
          start: "top bottom-=300",
          toggleActions: "play none none reverse"
        },
        opacity: 1,
        y: 0,
        duration: 1,
        delay: index * 0.2,
        ease: "power3.out"
      });
    });
  });
</script>