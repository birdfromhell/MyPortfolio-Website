---
import { fetchData } from '../utils/api';

// Default projects data as fallback
const defaultProjects = [
  {
    title: "Discover an Amazing Collection of Developer Portfolios",
    description: "Explore a curated selection of exceptional developer portfolios. These sites showcase the creativity and skills of developers, providing inspiration for those looking to enhance or create their own portfolios.",
    preview: "https://dev-portfolio-hub.larryxue.dev/",
    github: "https://github.com/larry-xue/dev-portfolio-hub",
    image: "/images/dev-portfolio.png"
  },
  {
    title: "AI Hub powered by Cloudflare Worker AI",
    description: "Developed a project using Nuxt.js and Cloudflare Worker AI, facilitating users to multiple Cloudflare Worker AI functionalities. Integrated dark/light mode and OAuth login with GitHub for enhanced user experience. Additionally, empowered users to deploy their private AI sites.",
    preview: "https://ai.larryxue.dev/",
    github: "https://github.com/larry-xue/nuxt-chat-cloudflare",
    image: "/images/ai-site.png"
  },
  {
    title: "First Edition of Personal Portfolio",
    description: "Built a personal website using Next.js and Next UI.",
    preview: "https://v1-portfolio.larryxue.dev/",
    github: "https://github.com/larry-xue/larry-xue-site",
    image: "/images/v1-portfolio.png"
  }
];

// Fetch projects data from API
const projects = await fetchData('projects', defaultProjects);
---

<section class="py-20" id="side-projects">
  <div class="container mx-auto px-4">
    <h2 class="text-4xl font-bold mb-12 dark:text-white">Side Projects</h2>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 auto-rows-auto">
      {projects.map(project => (
        <div class="project-card rounded-lg overflow-hidden bg-white dark:bg-gray-800 shadow-lg hover:shadow-xl transition-all duration-300 dark:shadow-gray-900/30 h-full flex flex-col border border-gray-200 dark:border-gray-700 hover:border-primary/30 dark:hover:border-primary/30">
          {project.preview && (
            <div class="relative w-full overflow-hidden bg-gray-100 dark:bg-gray-700 border-b border-gray-200 dark:border-gray-700">
              <img src={project.image} alt={project.title} class="w-full h-auto object-cover transform transition-transform duration-300 hover:scale-110">
            </div>
          )}
          <div class="p-6 flex-grow flex flex-col">
            <h3 class="text-xl font-bold mb-2 dark:text-white">{project.title}</h3>
            <p class="text-gray-600 dark:text-gray-300 mb-4 flex-grow">{project.description}</p>
            <div class="flex gap-2 mt-auto">
              <a href={project.github} target="_blank" class="px-3 py-1 bg-primary/10 text-primary dark:bg-primary/20 dark:text-primary-300 rounded-full text-sm hover:bg-primary/20 transition-colors">GitHub</a>
              {project.preview && (
                <a href={project.preview} target="_blank" class="px-3 py-1 bg-primary/10 text-primary dark:bg-primary/20 dark:text-primary-300 rounded-full text-sm hover:bg-primary/20 transition-colors">Preview</a>
              )}
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<script>
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';

  gsap.registerPlugin(ScrollTrigger);

  // Title animation
  gsap.from('.project-title', {
    scrollTrigger: {
      trigger: '#side-projects',
      start: 'top 80%',
      toggleActions: 'play none none reverse'
    },
    y: 50,
    opacity: 0,
    duration: 0.8,
    ease: 'power2.out'
  });

  // Cards animation with batch for better performance
  gsap.utils.toArray<HTMLElement>('.project-card').forEach((card, i) => {
    gsap.from(card as HTMLElement, {
      scrollTrigger: {
        trigger: card,
        start: 'top bottom-=100',
        toggleActions: 'play none none reverse'
      },
      y: 50,
      opacity: 0,
      duration: 0.3,
      delay: i * 0.1,
      ease: 'power2.out'
    });
  });
</script>